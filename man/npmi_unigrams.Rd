% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/npmi_for_multigrams.R, R/npmi_for_unigrams.R
\name{npmi_unigrams}
\alias{npmi_unigrams}
\title{Generates ngrams and delivers pmi scores by working from kwic file back to the full corpus (more efficient than generating large ngrams across the whole corpus)}
\usage{
npmi_unigrams(vect, keyword, window = 5, ngram = 1, cutoff = 3,
  normalised = TRUE)

npmi_unigrams(vect, keyword, window = 5, ngram = 1, cutoff = 3,
  normalised = TRUE)
}
\arguments{
\item{vect}{A vector of text files or a corpus}

\item{keyword}{A keyword to feed to the kwic vector}

\item{window}{The width of the kwic vector}

\item{ngram}{The ngram types}

\item{cutoff}{A floor for infrequent terms}

\item{vect}{A vector of text files or a corpus}

\item{keyword}{A keyword to feed to the kwic vector}

\item{window}{The width of the kwic vector}

\item{ngram}{The ngram types}
}
\description{
Generates ngrams and delivers pmi scores by working from kwic file back to the full corpus (more efficient than generating large ngrams across the whole corpus)

Calculates a pointwise mutual information score for ngrams in a corpus, normalised if requested. Can work with multi-grams but is not efficient. Try npmi_multigram instead.
}
\keyword{corpus}
\keyword{information}
\keyword{kwic}
\keyword{mutual}

